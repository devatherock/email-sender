plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '7.0.3'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'io.github.devatherock'
version = '2.0.0'

repositories {
    mavenCentral()
}

dependencies {
    def lombokVersion = '1.18.38'
    def spockVersion = '2.3-groovy-4.0'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.4'
    implementation group: 'org.masukomi', name: 'aspirin', version: '0.11.01'
    implementation group: 'dnsjava', name: 'dnsjava', version: '3.6.3'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.49.1.0'
    implementation group: 'org.simplejavamail', name: 'simple-java-mail', version: '6.7.6'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.1'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.8'

    testImplementation group: 'org.apache.groovy', name: 'groovy-json', version: '4.0.26'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: spockVersion
    testImplementation group: 'org.spockframework', name: 'spock-spring', version: spockVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.subethamail', name: 'subethasmtp', version: '3.1.7'
}

bootRun {
    systemProperties System.properties
}

springBoot {
    buildInfo()
}

// To be able to identify the fat jar in dockerfile with spring boot 2.5+
tasks.named('bootJar') {
    archiveClassifier = 'boot'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

ext.jacoco = [
    exclusions: [
        'io/github/devatherock/emailsender/EmailSenderApplication.class',
    ],
    coverageThresholds: [
        'io.github.devatherock.emailsender.service.EmailClient': [
            'BRANCH': 0.95,
            'COMPLEXITY': 0.93,
            'INSTRUCTION': 0.95,
            'LINE': 0.95
        ]
    ]
]

apply from: "${getPropertyValue('gradle.includes.location', 'https://raw.githubusercontent.com/devatherock/gradle-includes/master')}/native.gradle"
apply from: "${getPropertyValue('gradle.includes.location', 'https://raw.githubusercontent.com/devatherock/gradle-includes/master')}/integration.gradle"
apply from: "${getPropertyValue('gradle.includes.location', 'https://raw.githubusercontent.com/devatherock/gradle-includes/master')}/checks.gradle"

// Disable checkstyle on classes generated by Spring Aot
tasks['checkstyleAot'].enabled = false
tasks['checkstyleAotTest'].enabled = false

/**
 * Fetches the value of a gradle property
 *
 * @param propertyName
 * @param propertyValueDefault
 * @return the property value
 */
String getPropertyValue(String propertyName, String propertyValueDefault = null) {
    return project.hasProperty(propertyName) ? project[propertyName] : propertyValueDefault
}
